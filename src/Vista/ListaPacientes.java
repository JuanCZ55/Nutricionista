/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Modelo.Paciente;
import Persistencia.PacienteData;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juanz
 */
public class ListaPacientes extends javax.swing.JInternalFrame {

    private final PacienteData pd = new PacienteData();

    public ListaPacientes() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTtablaPacientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jCBSeleccion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        jTtablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Edad", "Altura", "Condiciones", "Peso Actual", "Peso Buscado", "Peso Inicial", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTtablaPacientes);
        if (jTtablaPacientes.getColumnModel().getColumnCount() > 0) {
            jTtablaPacientes.getColumnModel().getColumn(0).setResizable(false);
            jTtablaPacientes.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTtablaPacientes.getColumnModel().getColumn(1).setMinWidth(23);
        }

        jLabel1.setText("Listar Pacientes por:");

        jCBSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir", "Todos", "Los que llegaron", "Los que no llegaron" }));
        jCBSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBSeleccionActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Lista de Pacientes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addComponent(jCBSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(199, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCBSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBSeleccionActionPerformed
        ArrayList<Paciente> lp;
        if (jCBSeleccion.getSelectedItem().equals("Todos")) {
            lp = pd.listarPacientes();
            enlistarPacientes(lp);
        } else if (jCBSeleccion.getSelectedItem().equals("Los que llegaron")) {
            lp = pd.listarLosQueLLegaron();
            enlistarPacientes(lp);
        } else if (jCBSeleccion.getSelectedItem().equals("Los que no llegaron")) {
            lp = pd.listarLosQueNoLLegaron();
            enlistarPacientes(lp);
        }
    }//GEN-LAST:event_jCBSeleccionActionPerformed
    private void enlistarPacientes(ArrayList<Paciente> lista) {
        DefaultTableModel modelo = (DefaultTableModel) jTtablaPacientes.getModel();
        modelo.setRowCount(0);
        for (Paciente aux : lista) {
            modelo.addRow(new Object[]{
                aux.getIdPaciente(),
                aux.getNombre(),
                aux.getEdad(),
                aux.getAltura(),
                pd.convertirSetString(aux.getCondicionSalud()),
                aux.getPesoActual(),
                aux.getPesoBuscado(),
                aux.getPesoInicial(),
                aux.isEstado()
            });
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCBSeleccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTtablaPacientes;
    // End of variables declaration//GEN-END:variables
}
