package Vista;

import Modelo.Dieta;
import Modelo.Paciente;
import Modelo.Comidas;
import Modelo.MenuDiario;
import Persistencia.DietaData;
import Persistencia.MenuDiarioData;
import Persistencia.PacienteData;
import java.util.ArrayList;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ListarMenuDiario extends javax.swing.JInternalFrame {

    MenuDiarioData menuAcceso = new MenuDiarioData();
    private DefaultTableModel modelo;

    public ListarMenuDiario() {
        initComponents();
        modelo = (DefaultTableModel) jTMenuComida.getModel();
        cargarDietas();
        deshabilitar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCBDieta = new javax.swing.JComboBox<>();
        jCBEstado = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jCBDia = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jCBMenu = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMenuComida = new javax.swing.JTable();
        jBHabilitar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTFPaciente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setText("Seleccione un Dieta:");

        jCBDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBDietaActionPerformed(evt);
            }
        });

        jCBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Menu Activo", "Menu Inactivo", "Todos los Menu" }));
        jCBEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEstadoActionPerformed(evt);
            }
        });

        jLabel2.setText("Estado del Menu:");

        jCBDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBDiaActionPerformed(evt);
            }
        });

        jLabel3.setText("Seleccione un Dia:");

        jCBMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBMenuActionPerformed(evt);
            }
        });

        jLabel4.setText("Seleccione un Menu");

        jTMenuComida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "IdMenuDiario", "IdComida", "Nombre de Comida", "Tipo de Comida", "Calorias", "Condicion"
            }
        ));
        jScrollPane1.setViewportView(jTMenuComida);

        jBHabilitar.setText("Habilitar");
        jBHabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHabilitarActionPerformed(evt);
            }
        });

        jBEliminar.setText("Deshabilitar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Lista de Men√∫s Almacenados");

        jTFPaciente.setEditable(false);
        jTFPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPacienteActionPerformed(evt);
            }
        });

        jLabel7.setText("Paciente:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jBHabilitar)
                        .addGap(92, 92, 92)
                        .addComponent(jBEliminar)
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCBMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCBDia, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTFPaciente)
                                    .addComponent(jCBDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCBDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCBDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCBMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBHabilitar)
                    .addComponent(jBEliminar))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBHabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHabilitarActionPerformed
        if (jCBDieta.getSelectedItem() != null && jCBEstado.getSelectedItem() != null && jCBDia.getSelectedItem() != null
                && jCBMenu.getSelectedItem() != null) {
            menuAcceso.altaLogica(((MenuDiario)jCBMenu.getSelectedItem()).getIdMenu());
            deshabilitar();
        }
    }//GEN-LAST:event_jBHabilitarActionPerformed

    private void jCBMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBMenuActionPerformed
        if (Objects.nonNull(((MenuDiario) jCBMenu.getSelectedItem()))) {
            listarMenuComidas(menuAcceso.buscarMenuDiario(((MenuDiario) jCBMenu.getSelectedItem()).getIdMenu()));
            if (jCBMenu.getSelectedItem().equals("Menu Activo")) {
                jBEliminar.setEnabled(true);
            }else if (jCBMenu.getSelectedItem().equals("Menu Inactivo")){
                jBHabilitar.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un Menu para habilitarlo");
        }
    }//GEN-LAST:event_jCBMenuActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        if (jCBDieta.getSelectedItem() != null && jCBEstado.getSelectedItem() != null && jCBDia.getSelectedItem() != null
                && jCBMenu.getSelectedItem() != null) {
            menuAcceso.bajaLogica(((MenuDiario)jCBMenu.getSelectedItem()).getIdMenu());
            deshabilitar();
        }
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jCBDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBDiaActionPerformed
        // Carga los Menudiarios que son activos/inactivos y restringido por el dia
        switch (jCBDia.getSelectedItem().toString()) {
            case "Dia 1":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 1));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 1));
                }
                break;
            case "Dia 2":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 2));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 2));
                }
                break;
            case "Dia 3":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 3));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 3));
                }
                break;
            case "Dia 4":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 4));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 4));
                }
                break;
            case "Dia 5":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 5));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 5));
                }
                break;
            case "Dia 6":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 6));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 6));
                }
                break;
            case "Dia 7":
                // Si son habilitados
                if (jCBEstado.getSelectedItem() == "Menu Activo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 7));

                }
                // Si son deshabilitados
                if (jCBEstado.getSelectedItem() == "Menu Inactivo") {
                    enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDietaYDia(((Dieta) jCBDieta.getSelectedItem()).getIdDieta(), 7));
                }
                break;
        }
        jCBMenu.setEnabled(true);
    }//GEN-LAST:event_jCBDiaActionPerformed

    private void jCBEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEstadoActionPerformed
        //Listar todos los menus por el estado seleccionado
        if (Objects.nonNull(jCBDieta.getSelectedItem())) {
            if (jCBEstado.getSelectedItem().equals("Menu Activo")) {
                enlistarMenuComidas(menuAcceso.listarMenuDiarioActivoPorDieta(((Dieta) jCBDieta.getSelectedItem()).getIdDieta()));
            } else if (jCBEstado.getSelectedItem().equals("Menu Inactivo")) {
                enlistarMenuComidas(menuAcceso.listarMenuDiarioInactivoPorDieta(((Dieta) jCBDieta.getSelectedItem()).getIdDieta()));
            } else if (jCBEstado.getSelectedItem().equals("Todos los Menu")) {
                enlistarMenuComidas(menuAcceso.listarMenuDiarioPorDieta(((Dieta) jCBDieta.getSelectedItem()).getIdDieta()));
            }
            jCBDia.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "No hay Dietas en la base de datos a la que se le pueda aplicar esto");
        }

    }//GEN-LAST:event_jCBEstadoActionPerformed

    private void jCBDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBDietaActionPerformed
        if (Objects.nonNull(jCBDieta.getSelectedItem())) {
            jCBEstado.setEnabled(true);
            PacienteData pacData = new PacienteData();
            Paciente pac = new Paciente();
            pac = pacData.buscarPaciente(((Dieta) jCBDieta.getSelectedItem()).getIdDieta());
            jTFPaciente.setText(pac.getIdPaciente() + " " + pac.getNombre());
        }
    }//GEN-LAST:event_jCBDietaActionPerformed

    private void jTFPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPacienteActionPerformed

    //Auxiliares
    private void cargarDietas() {
        MenuDiarioData munuData = new MenuDiarioData();
        for (Dieta aux : munuData.listarTodasLasDietasActivas()) {
            jCBDieta.addItem(aux);
        }
    }

    private void deshabilitar() {
        jBEliminar.setEnabled(false);
        jBHabilitar.setEnabled(false);

        jCBDieta.setSelectedItem(null);
        jCBDia.setSelectedItem(null);
        jCBEstado.setSelectedItem(null);
        jCBMenu.setSelectedItem(null);

        jCBDia.setEnabled(false);
        jCBMenu.setEnabled(false);
        jCBEstado.setEnabled(false);

    }
    
    private void enlistarMenuComidas(ArrayList<MenuDiario> menuLista) {
        modelo.setRowCount(0);
        if (!menuLista.isEmpty()) {
            for (MenuDiario aux : menuLista) {
                for (Comidas comidas : menuAcceso.listarComidasPorMenuDiario(aux.getIdMenu())) {
                    modelo.addRow(new Object[]{
                        aux.getIdMenu(),
                        comidas.getIdComida(),
                        comidas.getNombre(),
                        comidas.getTipoDeComida(),
                        comidas.getCaloriasComida(),
                        comidas.getNoApto(),
                        comidas.isEstado()
                    });
                }
            }
        }
    }

    private void listarMenuComidas(MenuDiario menu) {
        modelo.setRowCount(0);
        if (!menu.isEmpty()) {
            for (Comidas comidas : menuAcceso.listarComidasPorMenuDiario(menu.getIdMenu())) {
                modelo.addRow(new Object[]{
                    menu.getIdMenu(),
                    comidas.getIdComida(),
                    comidas.getNombre(),
                    comidas.getTipoDeComida(),
                    comidas.getCaloriasComida(),
                    comidas.getNoApto(),
                    comidas.isEstado()
                });
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBHabilitar;
    private javax.swing.JComboBox<String> jCBDia;
    private javax.swing.JComboBox<Dieta> jCBDieta;
    private javax.swing.JComboBox<String> jCBEstado;
    private javax.swing.JComboBox<MenuDiario> jCBMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFPaciente;
    private javax.swing.JTable jTMenuComida;
    // End of variables declaration//GEN-END:variables
}
