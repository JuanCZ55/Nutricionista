/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Modelo.Ingredientes;
import Persistencia.IngredientesData;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JuanCZ
 */
public class ListarIngredientes extends javax.swing.JInternalFrame {

    IngredientesData id = new IngredientesData();
    DefaultTableModel modelo = null;

    public ListarIngredientes() {
        initComponents();
        modelo = (DefaultTableModel) jTable1.getModel();
        setnu();
        jCBlistar.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBlistar = new javax.swing.JComboBox<>();
        jLMax = new javax.swing.JLabel();
        jTFMin = new javax.swing.JTextField();
        jTFMax = new javax.swing.JTextField();
        jLMin = new javax.swing.JLabel();
        jBbuscar = new javax.swing.JButton();
        jBsalir = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 153));

        jPanel1.setBackground(new java.awt.Color(255, 235, 59));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Calorias x 100gr", "No Apto", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Listar Ingredientes");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Listar por:");

        jCBlistar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A Todos", "Activo", "No Activo", "Calorias" }));
        jCBlistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBlistarActionPerformed(evt);
            }
        });

        jLMax.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLMax.setText("Maximo");

        jLMin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLMin.setText("Minimo");

        jBbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        jBbuscar.setText("Buscar");
        jBbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBbuscarActionPerformed(evt);
            }
        });

        jBsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/puerta-abierta.png"))); // NOI18N
        jBsalir.setText("Salir");
        jBsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jCBlistar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jBbuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBsalir))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLMax)
                                        .addGap(76, 76, 76)
                                        .addComponent(jLMin))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTFMin, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(jTFMax, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCBlistar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jBbuscar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLMin)
                            .addComponent(jLMax))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jBsalir)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBbuscarActionPerformed
        try {
            if (jTFMin.getText().isEmpty() && jTFMax.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar al menos un valor para las calor√≠as.");
                return;
            }
            if (!jTFMax.getText().isEmpty() && !jTFMin.getText().isEmpty()) {
                double max = Double.parseDouble(jTFMax.getText());
                double min = Double.parseDouble(jTFMin.getText());
                enlistar(id.listaMinMaxCalorias(min, max));
            } else if (!jTFMax.getText().isEmpty() && jTFMin.getText().isEmpty()) {
                double max = Double.parseDouble(jTFMax.getText());
                enlistar(id.listaMaxCalorias(max));
            } else if (jTFMax.getText().isEmpty() && !jTFMin.getText().isEmpty()) {
                double min = Double.parseDouble(jTFMin.getText());
                enlistar(id.listaMinCalorias(min));
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese Valores Correctos,solo numeros");
        }
    }//GEN-LAST:event_jBbuscarActionPerformed

    private void jCBlistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBlistarActionPerformed
        if (jCBlistar.getSelectedItem() != null) {
            String eleccion = (String) jCBlistar.getSelectedItem();
            if (eleccion.equals("A Todos")) {
                setnu();
                enlistar(id.listarIngredientes());
            } else if (eleccion.equals("Activo")) {
                setnu();
                ArrayList<Ingredientes> act = new ArrayList<>();
                for (Ingredientes listarIngrediente : id.listarIngredientes()) {
                    if (listarIngrediente.isEstado()) {
                        act.add(listarIngrediente);
                    }
                }
                enlistar(act);
            } else if (eleccion.equals("No Activo")) {
                setnu();
                ArrayList<Ingredientes> nact = new ArrayList<>();
                for (Ingredientes listarIngrediente : id.listarIngredientes()) {
                    if (!listarIngrediente.isEstado()) {
                        nact.add(listarIngrediente);
                    }
                }
                enlistar(nact);

            } else if (eleccion.equals("Calorias")) {
                jTFMax.setEnabled(true);
                jTFMin.setEnabled(true);
                jLMax.setEnabled(true);
                jLMin.setEnabled(true);
                jBbuscar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jCBlistarActionPerformed

    private void jBsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalirActionPerformed
this.dispose();
    }//GEN-LAST:event_jBsalirActionPerformed
    public void setnu() {
        jTFMax.setEnabled(false);
        jTFMin.setEnabled(false);
        jLMax.setEnabled(false);
        jLMin.setEnabled(false);
        jTFMax.setText("");
        jTFMin.setText("");
        jBbuscar.setEnabled(false);
    }

    public void enlistar(ArrayList<Ingredientes> lista) {
        modelo.setRowCount(0);
        String estado = "";
        if (!lista.isEmpty()) {
            for (Ingredientes aux : lista) {
                if (aux.isEstado()) {
                    estado = "Activo";
                } else {
                    estado = "Inactivo";

                }
                modelo.addRow(new Object[]{
                    aux.getIdIngredientes(),
                    aux.getNombre(),
                    aux.getCaloriasPor100(),
                    aux.getNoApto(),
                    estado
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay comidas para esa restriccion, ingrese nuevamente");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBbuscar;
    private javax.swing.JButton jBsalir;
    private javax.swing.JComboBox<String> jCBlistar;
    private javax.swing.JLabel jLMax;
    private javax.swing.JLabel jLMin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFMax;
    private javax.swing.JTextField jTFMin;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
